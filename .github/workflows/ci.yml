name: Flask Docker CI/CD

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2️⃣ Setup Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    # 3️⃣ Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # 4️⃣ Build Docker image
    - name: Build Docker image
      run: docker build -t hello-devops-app .

    # 5️⃣ Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # 6️⃣ Login to ECR
    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO_URI }}

    # 7️⃣ Tag Docker image for ECR
    - name: Tag Docker image
      run: |
        docker tag hello-devops-app:latest ${{ secrets.ECR_REPO_URI }}:latest

    # 8️⃣ Push Docker image to ECR
    - name: Push Docker image to ECR
      run: |
        docker push ${{ secrets.ECR_REPO_URI }}:latest

    # 9️⃣ Deploy to Elastic Beanstalk
    - name: Deploy to Elastic Beanstalk
      run: |
        pip install awsebcli
        eb init ${{ secrets.EB_APP_NAME }} -p docker --region ${{ secrets.AWS_REGION }}
        eb deploy ${{ secrets.EB_ENV_NAME }}
